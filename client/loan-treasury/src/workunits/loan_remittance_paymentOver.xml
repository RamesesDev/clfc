<workunit>
    <invokers>        
        <invoker type="collection:overPayment" caption="Over Payment Form" target="popup"/>         
        
        <invoker type="formActions" action="Ok"     caption="Ok and continue" mnemonic="o" tooltip="Ok and Continue"/>
        <invoker type="formActions" action="_close" caption="Cancel" mnemonic="c" tooltip="Cancel" immediate="true"/>
        <invoker type="formReportActions" caption="Close" icon="images/exit16.png" action="_close" mnemonic="c"/>
    </invokers>
    <code> 
        <![CDATA[
        import com.rameses.rcp.annotations.*;
        import com.rameses.rcp.common.*;
        import com.rameses.util.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.reports.*;
        import com.rameses.common.*;
        import java.util.regex.*;
        import java.sql.Timestamp;
        
        class LoanRemittanceOverPaymentController{
            @Service("LoanRemittanceService")
            def remitSvc;
            
            @Service("LoanCollectionSheetService")
            def colSheetSvc;

            @Service( "LoanApplicationSearchService" )
            def searchSvc;
            
            @Binding
            def binding;
            
            def mode;
            def entity;
            //def entity = [ date: OsirisContext.env.LOCALE_TIME ];
            
            def difference;
            def overSelectHandler;
            def overHandler={o->
                entity.routecode=o.code;
                entity.collector=o.collector;
                entity.routedescription=o.description;
                //entity.route = entity.routecode + " - " + entity.routedescription;
                entity.amount = difference;
                binding.refresh("entity.route");
            };
            
            def Ok(){
               if(MsgBox.confirm("Are you sure you want to post this \nover payment remittance, proceed.?")){
                    //MsgBox.alert("Printing currently not supported.");
                    //binding.fireNavigation( (mode='printPage') );
                    MsgBox.alert("Now Printing Data of" + "\nRoute Code: " +entity.routecode+
                            "\nDescription: " +entity.routedescription+ "\nCollector: " +entity.collector+
                            "\nAmount of over of: " +entity.amount+ "\nReason(s): " +entity.reasons);
                    report.viewReport();
                    return "printPage";
                    //return "_close";
               }
            }
            
            def collectionSheet;
            def report = [
                getReportName:{ return 'loantreasury/printout/OveragePayment.jasper'; },
                getReportData:{ //return collectionSheet.list;
                        entity.orno = 1;
                        entity.srno = 1;
                        def data = [entity:entity];
                        
                        data.collector = entity.collector;
                        data.date = entity.date;
                        
                        if( entity.routecode ==null )
                            data.routecode = '';
                        else data.routecode = entity.routecode;
                        if( entity.routedescription ==null )
                            data.routedescription = '';
                        else data.routedescription = entity.routedescription;
                        data.route = entity.routecode + " - " + entity.routedescription;
                        
                        if(entity.amount!=null){
                            data.amount = new BigDecimal(entity.amount);
                             /*****Conversion Number to words****/
                             data.amount2 = NumberToWords.instance.convert(data.amount).toUpperCase() + " pesos and 00/100 only";
                        }else
                            data.amount = new BigDecimal(0.00);
                         
                        data.reasons = entity.reasons;
                        data.srno = entity.srno;
                        data.orno = entity.orno;
                        
                        return data;
                },
                getParameters:{
                    return [
                            //COLLECTION_NO: collectionSheet.collectionno,
                            
                            //DATE: collectionSheet.date,
                            //COLLECTOR: collectionSheet.collector,
                            //ROUTE_NO:  collectionSheet.routecode,
                            //ROUTE_DES: collectionSheet.routedescription,
                            //AMOUNT: collectionSheet.amount,
                            
                            BRANCH_NAME: OsirisContext.env.CLIENT.name ,
                            PRINTDATE: new Date(), 
                            User: OsirisContext.env.USERINFO.firstname + ' ' + OsirisContext.env.USERINFO.lastname
                            ]
                }
            ] as ReportModel;
        }
        ]]>
    </code>
    <pages>
        <page template="loantreasury.remittance.field.LoanRemittance_ShortageOverPaymentPage"/>
        <page name="printPage" template="loantreasury.collectionsheet.CollectionSheetPrintPage"/>
    </pages>    
</workunit>