<workunit>
    <invokers>
        <invoker type="loan:ledger_evaluation" target="popup" caption="Ledger Evaluation Form" />
        
        <invoker type="formActions" caption="Open"   action="open"   mnemonic="p" default="true"/>
        <invoker type="formActions" caption="Cancel" action="_close" mnemonic="c" immediate="true"/>
    </invokers>
    <code>
        <![CDATA[
        import com.rameses.rcp.annotations.*;
        import com.rameses.rcp.common.*;
        import com.rameses.util.*;
        import com.rameses.osiris2.client.*;
        import com.rameses.osiris2.reports.*;
        import com.rameses.common.*;
        import java.io.*; 
        import com.rameses.io.*;
        
        class LoanLedgerEvaluationController{
            @Service('LoanApplicationService')
            def svc;
            
            @Service('LoanLedgerService')
            def ledgerSvc;
            
            @Binding
            def binding;
            
            def selected;
            
            def ledgerEvaluationList;
            def ledgerEvaluationHandler = [
                getRows: { 50 },
                fetchList:{ 
                    it.objid = entity.objid;
                    return ledgerSvc.getDetails(it)
                },
                getColumns:{
                    return[ 
                            new Column(name:'appno',          caption:"App No.",         width:250),
                            new Column(name:'amountapproved', caption:"Amount",          width:200),          
                            new Column(name:'dtreleased',     caption:"Date Released",   width:250),
                            new Column(name:'maturitydate',   caption:"Maturity Date",   width:250),
                            new Column(name:'fullyPaidAmt',   caption:"Amt Fully Paid",  width:300),
                            new Column(name:'dateFullyPaid',  caption:"Date Fully Paid", width:300),
                            new Column(name:'totalAbsent',    caption:"Absences",        width:200),
                            new Column(name:'totalPenalty',   caption:"Total Penalty",   width:200),
                          ]
                },
                fetchList:{o-> 
                    return svc.getList();
                },
                getRows:{
                    return 15;
                }
            ]as SubListModel;
            
            /*
            def ledgerEvaluationList;
            def ledgerEvaluationHandler = [
                getRows: { 50 },
                fetchList:{ 
                    it.objid = entity.objid;
                    return ledgerSvc.getDetails(it)
                },
                getColumns: {
                    return[
                        new Column(name:'date',                 caption:'Schedule' ,         width:95),
                        new Column(name:'principal',            caption:'Principal Payment', width:110),
                        new Column(name:'principal_balance',    caption:'Partial Balance',   width:95),
                        new Column(name:'interest',             caption:'Interest Paid',     width:90),
                        new Column(name:'absent_penalty',       caption:'Absent',            width:75),
                        new Column(name:'underpayment_penalty', caption:'Underpayment',      width:96),
                        new Column(name:'pastdue',              caption:'Overdue',           width:60),
                        new Column(name:'payment',              caption:'Total Payment',     width:97),
                        new Column(name:'refno',                caption:'OR/Ref. No.',       width:75),
                        new Column(name:'paymentdate',          caption:'Payment Date',      width:100),
                    ];
                }
            ]as SubListModel;
            */
            def open(){
                return "_close";
            }
        }
        ]]>
     </code>
     <pages>
        <page template="loan.ui.ledger.LedgerEvaluation"/>
     </pages>
</workunit>