<workunit>
    <invoker type="loan:childrenInfo" caption="Add Children Form" target="popup"/>
    
    <invoker type="formActions" caption="Add and Close" mnemonic="c" action="add" />
    <invoker type="formActions" caption="Cancel"        mnemonic="x" action="_close" immediate="true"/>
    <code lang="groovy">
        <![CDATA[
        import com.rameses.rcp.annotations.*;
        import com.rameses.rcp.common.*;
        import com.rameses.osiris2.client.*;
        
        public class ChildrenPageController {
            def entity=[:];

            def info;
            def selectHandler;
            
            //****  Employment Information  ****//
            def childrenEmploymentHandler = [
                getRows: { 12 },
                getColumns: {
                    return [
                       new Column(name: 'employer', caption: 'Employer',         width: 110),                        
                       new Column(name: 'telno',    caption: 'Tel No.',          width: 70),
                       new Column(name: 'address',  caption: 'Address',          width: 100),
                       new Column(name: 'position', caption: 'Job Desc/Position',width: 110),
                       new Column(name: 'status',   caption: 'Status', width:90, maxWidth: 100),
                       new Column(name: 'years',    caption: 'Length of Svc',    width: 90),
                       new Column(name: 'salary',   caption: 'Compensation',     width: 100, maxWidth: 100),
                       new Column(name: 'others',   caption: 'Others',           width: 100),
                    ]
                },
                fetchList: { 
                    if(entity.employmentList==null)
                        entity.employmentList=[]; 
                    return entity.employmentList;
                },
                createItem:{ [:] },
                
                onAddItem:{o-> 
                    entity.employmentList.add(o);
                },
                onRemoveItem:{o->
                    if(MsgBox.confirm("Are you sure you want to remove the selected item?"))
                        entity.employmentList.remove(o);
                }
            ] as SubListModel;
            
            def employmentInfo;
            def addChildrenEmployment(){
                if(!entity.name)throw new Exception("Please specify the name of the sibling(s) first.");
                if(!entity.age)throw new Exception("Please specify the age of the sibling(s).");
                return InvokerUtil.lookupOpener("loan:employment",[selectHandler:{ o ->
                    entity.employmentList.add( o );
                    childrenEmploymentHandler.load();
                }]);
            }
            
            /*def editPrincipalSiblingsEmployment(){
            
            }*/
            
            def removeChildrenEmployment(){
                if(!employmentInfo){
                    MsgBox.alert("No record selected.");
                    return null;
                    binding?.refresh("employmentInfo");
                }
                if(MsgBox.confirm("Are you sure you want to remove the selected item?"))
                    entity.employmentList.remove(employmentInfo);
            }
            
            //****  Other Source(s) Of Income  ****//
            def childrenOtherSourcesOfIncomeHandler = [
                getRows: { 15 },
                getColumns: {
                    return [
                        new Column(name: 'kindOfBusiness',caption: 'Income Sources',    width: 150),
                        new Column(name: 'grossNetIncome',caption: 'Gross/Net Income ', width: 150),
                        new Column(name: 'remarks',       caption: 'Remarks',           width: 250),
                    ]
                },
                fetchList: { 
                    if(entity.otherSourcesOfIncomeList==null)
                        entity.otherSourcesOfIncomeList=[]; 
                    return entity.otherSourcesOfIncomeList;
                },
                onRemoveItem:{o->
                    if(MsgBox.confirm("Are you sure you want to remove the selected item?"))
                        entity.otherSourcesOfIncomeList.remove(o);
                }
            ] as SubListModel;
            
            def otherSrcOfIncomeInfo;
            def addChildrenOtherSourcesOfIncome(){
                if(!entity.name)throw new Exception("Please specify the name of the sibling(s) first.");
                if(!entity.age)throw new Exception("Please specify the age of the sibling(s).");
                return InvokerUtil.lookupOpener("loan:otherSourcesOfIncome",[selectHandler:{ o ->
                    entity.otherSourcesOfIncomeList.add( o );
                    childrenOtherSourcesOfIncomeHandler.load();
                }]);
            }
            
            /*def editChildrenOtherSourcesOfIncome(){
                if(MsgBox.confirm("Are you sure you want to remove the selected item?"))
                    entity.principalSiblingsOtherSourcesOfIncomeList.remove(selected.principalSiblingsOtherSourcesOfIncomeList);
            }*/
            
            def removeChildrenOtherSourcesOfIncome(){
                if(!otherSrcOfIncomeInfo){
                    MsgBox.alert("No record selected.");
                    return null;
                    binding?.refresh("otherSrcOfIncomeInfo");
                }
                if(MsgBox.confirm("Are you sure you want to remove the selected item?"))
                    entity.otherSourcesOfIncomeList.remove(otherSrcOfIncomeInfo);
            }
            
            def add(){
                if( selectHandler ) selectHandler ( entity );
                return "_close";
            }
        }
        ]]>
    </code>
    <pages>
        <page template="loan.ui.ChildrenPage"/>
    </pages>
</workunit>
